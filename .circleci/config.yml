# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2

references:

  # vars
  npm_cache_key: &npm_cache_key
    v1-dependency-npm-{{ checksum "package.json" }}
  npm_backup_cache_key: &npm_backup_cache_key
    v1-dependency-npm


  restore_repo: &restore_repo
    restore_cache:
      keys:
        - v1-repo-{{ .Branch }}-{{ .Revision }}
        - v1-repo-{{ .Branch }}
        - v1-repo

  restore_node_modules: &restore_node_modules
    restore_cache:
      keys:
        - *npm_cache_key
        - *npm_backup_cache_key

jobs:
  set_up:
    working_directory: ~/repo
    steps:
      - *restore_repo
      - checkout

      # install repo
      - run: yarn install

      - save_cache:
          key: v1-repo-{{ .Branch }}-{{ .Revision }}
          paths:
            - .
    
  # test:
  #   docker:
  #     # specify the version you desire here
  #     - image: circleci/node:7.10
      
  #     # Specify service dependencies here if necessary
  #     # CircleCI maintains a library of pre-built images
  #     # documented at https://circleci.com/docs/2.0/circleci-images/
  #     # - image: circleci/mongo:3.4.4

  #   working_directory: ~/repo

  #   steps:
  #     - checkout_code
  #     - install

  #     # Download and cache dependencies
  #     - restore_cache:
  #         keys:
  #         - v1-dependencies-{{ checksum "package.json" }}
  #         # fallback to using the latest cache if no exact match is found
  #         - v1-dependencies-

  #     # install repo
  #     - run: yarn install

  #     - save_cache:
  #         paths:
  #           - node_modules
  #         key: v1-dependencies-{{ checksum "package.json" }}
        
  #     # run tests!
  #     # - run: yarn test

  #     # build
  #     - run: yarn run prod

  deploy-dev:
    docker:
      # specify the version you desire here
      - image: circleci/node:7.10
    working_directory: ~/repo  
    steps:
      - set_up

      - restore_cache:
         keys:
           - v1-dependencies-{{ checksum "package.json" }}
           # fallback to using the latest cache if no exact match is found
           - v1-dependencies-

      # install awscli
      - run:
          working_directory: ~/
          name: 'install awscli'
          command: |
            sudo apt-get -y -qq update
            sudo apt-get -y -qq install python3.4-dev
            curl -O https://bootstrap.pypa.io/get-pip.py
            python3.4 get-pip.py --user
            .local/bin/pip install awscli --upgrade --user

      # build
      - run: 
          name: 'build'
          command: yarn run prod

      - deploy:
          working_directory: ~/
          command: .local/bin/aws s3 sync repo/dist/ s3://dev-reactjsvideos.com --delete

  deploy-master:
    docker:
      # specify the version you desire here
      - image: circleci/node:7.10
    working_directory: ~/repo  
    steps:
      - checkout

      - restore_cache:
         keys:
           - v1-dependencies-{{ checksum "package.json" }}
           # fallback to using the latest cache if no exact match is found
           - v1-dependencies-

      # install awscli
      - run:
          working_directory: ~/
          name: 'install awscli'
          command: |
            sudo apt-get -y -qq update
            sudo apt-get -y -qq install python3.4-dev
            curl -O https://bootstrap.pypa.io/get-pip.py
            python3.4 get-pip.py --user
            .local/bin/pip install awscli --upgrade --user

      # build
      - run: 
          name: 'build'
          command: yarn run prod

      - deploy:
          working_directory: ~/
          command: .local/bin/aws s3 sync repo/dist/ s3://www.reactjsvideos.com --delete

workflows:
  version: 2
  build_and_test:
    jobs:
      - set_up
      # - deploy-master:
      #     requires:
      #       - test
      #     filters:
      #       branches:
      #         only: master
      # - test: 
      #     requires:
      #       - set_up
      - deploy-dev:
          requires:
            - set_up
            - test
          filters:
            branches:
              only: 
                - feature/circleCiBranches


